/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  919: {
    RepoRewards: {
      address: "0xB7401564Db89c1402704FCA219f80c4174FCb652",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
          ],
          name: "addFundToRepository",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "poolManager",
              type: "address",
            },
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
          ],
          name: "addPoolManager",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "reward",
              type: "uint256",
            },
          ],
          name: "allocateIssueReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "checkUserType",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "contributorAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "contributors",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueId",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "contributorAddress",
              type: "address",
            },
          ],
          name: "distributeReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getContributor",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "githubId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "worldId",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
              ],
              internalType: "struct RepoRewards.Contributor",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "issueIds",
              type: "uint256[]",
            },
          ],
          name: "getIssueRewards",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getPoolManager",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "githubId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "worldId",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
              ],
              internalType: "struct RepoRewards.PoolManager",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_repoId",
              type: "uint256",
            },
          ],
          name: "getRepository",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "issueId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "rewardAmount",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "status",
                  type: "string",
                },
              ],
              internalType: "struct RepoRewards.Issue[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "repoIds",
              type: "uint256[]",
            },
          ],
          name: "getRepositoryRewards",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
          ],
          name: "getUserWalletByUsername",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "poolManagerAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "poolManagers",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "string",
              name: "typeOfUser",
              type: "string",
            },
          ],
          name: "registerUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "repositories",
          outputs: [
            {
              internalType: "uint256",
              name: "poolRewards",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
  31337: {
    RepoRewards: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
          ],
          name: "addFundToRepository",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "poolManager",
              type: "address",
            },
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
          ],
          name: "addPoolManager",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "reward",
              type: "uint256",
            },
          ],
          name: "allocateIssueReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "checkUserType",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "contributorAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "contributors",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueId",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "contributorAddress",
              type: "address",
            },
          ],
          name: "distributeReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getContributor",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "githubId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "worldId",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
              ],
              internalType: "struct RepoRewards.Contributor",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "issueIds",
              type: "uint256[]",
            },
          ],
          name: "getIssueRewards",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getPoolManager",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "githubId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "worldId",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
              ],
              internalType: "struct RepoRewards.PoolManager",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_repoId",
              type: "uint256",
            },
          ],
          name: "getRepository",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "issueId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "rewardAmount",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "status",
                  type: "string",
                },
              ],
              internalType: "struct RepoRewards.Issue[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "repoIds",
              type: "uint256[]",
            },
          ],
          name: "getRepositoryRewards",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
          ],
          name: "getUserWalletByUsername",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "poolManagerAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "poolManagers",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "string",
              name: "typeOfUser",
              type: "string",
            },
          ],
          name: "registerUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "repositories",
          outputs: [
            {
              internalType: "uint256",
              name: "poolRewards",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
  84532: {
    RepoRewards: {
      address: "0xB7401564Db89c1402704FCA219f80c4174FCb652",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
          ],
          name: "addFundToRepository",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "poolManager",
              type: "address",
            },
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
          ],
          name: "addPoolManager",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "reward",
              type: "uint256",
            },
          ],
          name: "allocateIssueReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "checkUserType",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "contributorAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "contributors",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueId",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "contributorAddress",
              type: "address",
            },
          ],
          name: "distributeReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getContributor",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "githubId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "worldId",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
              ],
              internalType: "struct RepoRewards.Contributor",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "issueIds",
              type: "uint256[]",
            },
          ],
          name: "getIssueRewards",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getPoolManager",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "githubId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "worldId",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
              ],
              internalType: "struct RepoRewards.PoolManager",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_repoId",
              type: "uint256",
            },
          ],
          name: "getRepository",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "issueId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "rewardAmount",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "status",
                  type: "string",
                },
              ],
              internalType: "struct RepoRewards.Issue[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "repoIds",
              type: "uint256[]",
            },
          ],
          name: "getRepositoryRewards",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
          ],
          name: "getUserWalletByUsername",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "poolManagerAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "poolManagers",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "string",
              name: "typeOfUser",
              type: "string",
            },
          ],
          name: "registerUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "repositories",
          outputs: [
            {
              internalType: "uint256",
              name: "poolRewards",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155420: {
    RepoRewards: {
      address: "0x78B3b2E85D678C4ADd2C46b47e0a1B632342Df59",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
          ],
          name: "addFundToRepository",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "poolManager",
              type: "address",
            },
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
          ],
          name: "addPoolManager",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "reward",
              type: "uint256",
            },
          ],
          name: "allocateIssueReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "checkUserType",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "contributorAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "contributors",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueId",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "contributorAddress",
              type: "address",
            },
          ],
          name: "distributeReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getContributor",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "githubId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "worldId",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
              ],
              internalType: "struct RepoRewards.Contributor",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "repoId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "issueIds",
              type: "uint256[]",
            },
          ],
          name: "getIssueRewards",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_wallet",
              type: "address",
            },
          ],
          name: "getPoolManager",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "githubId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "worldId",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
              ],
              internalType: "struct RepoRewards.PoolManager",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_repoId",
              type: "uint256",
            },
          ],
          name: "getRepository",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "issueId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "rewardAmount",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "status",
                  type: "string",
                },
              ],
              internalType: "struct RepoRewards.Issue[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "repoIds",
              type: "uint256[]",
            },
          ],
          name: "getRepositoryRewards",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
          ],
          name: "getUserWalletByUsername",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "poolManagerAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "poolManagers",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "githubId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "worldId",
              type: "string",
            },
            {
              internalType: "string",
              name: "typeOfUser",
              type: "string",
            },
          ],
          name: "registerUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "repositories",
          outputs: [
            {
              internalType: "uint256",
              name: "poolRewards",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "issueCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
  44787: {
    RepoRewards: {
      address: "0xACE638d0d36Bd6Cb3f8fEB9739F59492c4e2D13E",
      abi: [
        { type: "constructor", stateMutability: "nonpayable", inputs: [] },
        {
          type: "function",
          stateMutability: "payable",
          outputs: [],
          name: "addFundToRepository",
          inputs: [{ type: "uint256", name: "repoId", internalType: "uint256" }],
        },
        {
          type: "function",
          stateMutability: "nonpayable",
          outputs: [],
          name: "addPoolManager",
          inputs: [
            { type: "uint256", name: "repoId", internalType: "uint256" },
            { type: "address", name: "poolManager", internalType: "address" },
            { type: "string", name: "username", internalType: "string" },
            { type: "uint256", name: "githubId", internalType: "uint256" },
          ],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [{ type: "address", name: "", internalType: "address" }],
          name: "admin",
          inputs: [],
        },
        {
          type: "function",
          stateMutability: "nonpayable",
          outputs: [],
          name: "allocateIssueReward",
          inputs: [
            { type: "uint256", name: "repoId", internalType: "uint256" },
            { type: "uint256", name: "issueId", internalType: "uint256" },
            { type: "uint256", name: "reward", internalType: "uint256" },
          ],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [
            { type: "string", name: "", internalType: "string" },
            { type: "address", name: "", internalType: "address" },
          ],
          name: "checkUserType",
          inputs: [{ type: "address", name: "_user", internalType: "address" }],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [{ type: "address", name: "", internalType: "address" }],
          name: "contributorAddresses",
          inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [
            { type: "string", name: "username", internalType: "string" },
            { type: "uint256", name: "githubId", internalType: "uint256" },
            { type: "string", name: "worldId", internalType: "string" },
            { type: "address", name: "wallet", internalType: "address" },
          ],
          name: "contributors",
          inputs: [{ type: "address", name: "", internalType: "address" }],
        },
        {
          type: "function",
          stateMutability: "nonpayable",
          outputs: [],
          name: "distributeReward",
          inputs: [
            { type: "uint256", name: "repoId", internalType: "uint256" },
            { type: "uint256", name: "issueId", internalType: "uint256" },
            { type: "address", name: "contributorAddress", internalType: "address payable" },
          ],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [
            {
              type: "tuple",
              name: "",
              internalType: "struct RepoRewards.Contributor",
              components: [
                { type: "string", name: "username", internalType: "string" },
                { type: "uint256", name: "githubId", internalType: "uint256" },
                { type: "string", name: "worldId", internalType: "string" },
                { type: "address", name: "wallet", internalType: "address" },
              ],
            },
          ],
          name: "getContributor",
          inputs: [{ type: "address", name: "_wallet", internalType: "address" }],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [
            {
              type: "tuple",
              name: "",
              internalType: "struct RepoRewards.PoolManager",
              components: [
                { type: "string", name: "username", internalType: "string" },
                { type: "uint256", name: "githubId", internalType: "uint256" },
                { type: "string", name: "worldId", internalType: "string" },
                { type: "address", name: "wallet", internalType: "address" },
              ],
            },
          ],
          name: "getPoolManager",
          inputs: [{ type: "address", name: "_wallet", internalType: "address" }],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [
            { type: "address[]", name: "", internalType: "address[]" },
            { type: "address[]", name: "", internalType: "address[]" },
            { type: "uint256", name: "", internalType: "uint256" },
            {
              type: "tuple[]",
              name: "",
              internalType: "struct RepoRewards.Issue[]",
              components: [
                { type: "uint256", name: "issueId", internalType: "uint256" },
                { type: "uint256", name: "rewardAmount", internalType: "uint256" },
                { type: "string", name: "status", internalType: "string" },
              ],
            },
          ],
          name: "getRepository",
          inputs: [{ type: "uint256", name: "_repoId", internalType: "uint256" }],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [{ type: "address", name: "", internalType: "address" }],
          name: "getUserWalletByUsername",
          inputs: [{ type: "string", name: "username", internalType: "string" }],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [{ type: "address", name: "", internalType: "address" }],
          name: "poolManagerAddresses",
          inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [
            { type: "string", name: "username", internalType: "string" },
            { type: "uint256", name: "githubId", internalType: "uint256" },
            { type: "string", name: "worldId", internalType: "string" },
            { type: "address", name: "wallet", internalType: "address" },
          ],
          name: "poolManagers",
          inputs: [{ type: "address", name: "", internalType: "address" }],
        },
        {
          type: "function",
          stateMutability: "nonpayable",
          outputs: [],
          name: "registerUser",
          inputs: [
            { type: "string", name: "username", internalType: "string" },
            { type: "uint256", name: "githubId", internalType: "uint256" },
            { type: "string", name: "worldId", internalType: "string" },
            { type: "string", name: "typeOfUser", internalType: "string" },
          ],
        },
        {
          type: "function",
          stateMutability: "view",
          outputs: [{ type: "uint256", name: "poolRewards", internalType: "uint256" }],
          name: "repositories",
          inputs: [{ type: "uint256", name: "", internalType: "uint256" }],
        },
        { type: "receive", stateMutability: "payable" },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
